<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd

        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd">



    <!--    除了controller注解的组件，都扫描-->
    <context:component-scan base-package="com.secutity">
    </context:component-scan>

    <!-- 引入数据库的配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- Spring用来控制业务逻辑。数据源、事务控制、aop -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="Url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>




    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.secutity.dao"/>
    </bean>

    <!--    <context:component-scan base-package="com.secutity">-->
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--    </context:component-scan>-->
    <!--加载外部的属性配置文件-->
<!--    <context:property-placeholder location="classpath:jdbc.properties"/>-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--声明数据源DataSource-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://120.79.139.163:5001/Security"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>
    <!--创建出SqlSessionFactory对象  -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- configLocation指定全局配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <!--mapperLocations: 指定mapper文件的位置-->
        <property name="mapperLocations" value="classpath:com/secutity/dao/*.xml"></property>
    </bean>
    <!--配置一个可以进行批量执行的sqlSession  -->
<!--    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>-->
<!--        <constructor-arg name="executorType" value="BATCH"></constructor-arg>-->
<!--    </bean>-->

    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.atguigu.mybatis.dao"></property>
    </bean> -->


<!--    &lt;!&ndash;创建dao的代理&ndash;&gt;-->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        &lt;!&ndash;指定SqlSessionFactory对象的名称&ndash;&gt;-->
<!--        <property name="sqlSessionFactoryBeanName" value="factory"/>-->
<!--        &lt;!&ndash;指定基本包，dao接口所在的包名&ndash;&gt;-->
<!--        <property name="basePackage" value="com.secutity.dao"/>-->
<!--    </bean>-->
<!--    &lt;!&ndash;声明service&ndash;&gt;-->
<!--    <bean id="CompanyService" class="com.secutity.service.impl.CompanyServiceImpl">-->
<!--        <property name="CompanyDao" ref="companyDao"/>-->
<!--    </bean>-->
    <!--开启注解的支持-->
    <context:annotation-config/>
<!--声明事务-->
    <!--声明事务的控制-->
    <!--声明事务管理器-->
<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        &lt;!&ndash;指定数据源DataSource&ndash;&gt;-->
<!--        <property name="dataSource" ref="myDataSource"/>-->
<!--    </bean>-->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启事务注解驱动：告诉框架使用注解管理事务
        transaction-Manager:指定事务管理器的id
        可以使用多个数据库，设置多个数据源
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


<!--    <beans>-->
<!--        <bean id="school" class="com.sdpei.beans.School"/>-->
<!--        <bean id="family" class="com.sdpei.beans.Family"/>-->
<!--        <bean id="person" class="com.sdpei.beans.Person">-->
<!--            <property name="name" value="寒江"/>-->
<!--        </bean>-->

<!--    </beans>-->


</beans>